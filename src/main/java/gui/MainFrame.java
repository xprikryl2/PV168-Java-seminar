/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import common.Consts;
import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import moviemanager.backend.Movie;
import moviemanager.backend.MovieManagerImpl;
import moviemanager.backend.SpringConfig;
import moviemanager.backend.Person;
import moviemanager.backend.PersonManagerImpl;
import moviemanager.backend.RelationshipManagerImpl;
import org.slf4j.LoggerFactory;

/**
 *
 * @author Lukas Srom <lukas.srom@gmail.com>
 */
public class MainFrame extends javax.swing.JFrame {
    private static final SimpleDateFormat sdf = new SimpleDateFormat(Consts.TIME_FORMAT);
    final static org.slf4j.Logger log = LoggerFactory.getLogger(MainFrame.class);
    SpringConfig sc = new SpringConfig();
    private PersonManagerImpl personMngr = (PersonManagerImpl) sc.personManager();
    private RelationshipManagerImpl relationshipMngr = (RelationshipManagerImpl) sc.relationManager();
    private MovieManagerImpl movieMngr = (MovieManagerImpl) sc.movieManager();

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        try {
            System.setOut(new PrintStream(new BufferedOutputStream(new FileOutputStream("log.log")), true));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jDatePickerUtil1 = new org.jdatepicker.util.JDatePickerUtil();
        utilDateModel1 = new org.jdatepicker.impl.UtilDateModel();
        allPanel = new javax.swing.JTabbedPane();
        headerPersonPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        personList = new javax.swing.JList();
        personListLabel = new javax.swing.JLabel();
        personDeleteButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        personNameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        personIdTextField = new javax.swing.JTextField();
        personRelationshipTabbedPanel = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        personPlayedInList = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        personDirectedList = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        personWrittenList = new javax.swing.JList();
        personSaveButton = new javax.swing.JButton();
        personDetailsLabel = new javax.swing.JLabel();
        personDeleteRelationshipButton = new javax.swing.JButton();
        personNewButton = new javax.swing.JButton();
        personBirth = new org.jdesktop.swingx.JXDatePicker();
        jPanel4 = new javax.swing.JPanel();
        personRelationshipComboBox = new javax.swing.JComboBox();
        canvas1 = new java.awt.Canvas();
        jScrollPane5 = new javax.swing.JScrollPane();
        personRelationshipAllMovieList = new javax.swing.JList();
        personRelationshipManagerLabel = new javax.swing.JLabel();
        personRelationshipAddButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        headerMoviePanel = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        movieList = new javax.swing.JList();
        movieListLabel = new javax.swing.JLabel();
        movieDeleteButton = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        movieTitleTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        movieYearTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        movieIdTextField = new javax.swing.JTextField();
        movieSaveButton = new javax.swing.JButton();
        movieNewButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        movieGenreTextField = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        movieLengthTextField = new javax.swing.JTextField();
        movieRelationshipTabbedPanel = new javax.swing.JTabbedPane();
        jScrollPane11 = new javax.swing.JScrollPane();
        movieActorsList = new javax.swing.JList();
        jScrollPane12 = new javax.swing.JScrollPane();
        movieDirectorsList = new javax.swing.JList();
        jScrollPane13 = new javax.swing.JScrollPane();
        movieWritersList = new javax.swing.JList();
        movieDeleteRelationshipButton = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        movieRelationshipComboBox = new javax.swing.JComboBox();
        canvas2 = new java.awt.Canvas();
        jScrollPane10 = new javax.swing.JScrollPane();
        movieRelationshipAllPersonList = new javax.swing.JList();
        movieRelationshipManagerLabel = new javax.swing.JLabel();
        movieRelationshipAddButton = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        personList.setModel(new javax.swing.AbstractListModel() {
            List<Person> list = personMngr.listAllPersons();
            public int getSize() { return list.size(); }
            public Object getElementAt(int i) { return list.get(i); }
        });
        personList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                personListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(personList);

        personListLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        personListLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Localization"); // NOI18N
        personListLabel.setText(bundle.getString("Person List")); // NOI18N

        personDeleteButton.setText(bundle.getString("Delete Person")); // NOI18N
        personDeleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                personDeleteButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(personListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(personDeleteButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(personListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(personDeleteButton)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText(bundle.getString("Name")); // NOI18N

        jLabel3.setText(bundle.getString("Birth")); // NOI18N

        jLabel4.setText("ID:");

        personIdTextField.setEnabled(false);

        jScrollPane1.setViewportView(personPlayedInList);
        personPlayedInList.getAccessibleContext().setAccessibleName(bundle.getString("Played in")); // NOI18N

        personRelationshipTabbedPanel.addTab(bundle.getString("Played in"), jScrollPane1);

        jScrollPane3.setViewportView(personDirectedList);
        personDirectedList.getAccessibleContext().setAccessibleName(bundle.getString("Directed")); // NOI18N

        personRelationshipTabbedPanel.addTab(bundle.getString("Directed"), jScrollPane3);

        jScrollPane4.setViewportView(personWrittenList);
        personWrittenList.getAccessibleContext().setAccessibleName(bundle.getString("Written")); // NOI18N

        personRelationshipTabbedPanel.addTab(bundle.getString("Written"), jScrollPane4); // NOI18N

        personSaveButton.setText(bundle.getString("Save changes")); // NOI18N
        personSaveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                personSaveButtonMouseClicked(evt);
            }
        });

        personDetailsLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        personDetailsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        personDetailsLabel.setText(bundle.getString("Person Details")); // NOI18N

        personDeleteRelationshipButton.setText(bundle.getString("Delete Relationship")); // NOI18N
        personDeleteRelationshipButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                personDeleteRelationshipButtonMouseClicked(evt);
            }
        });

        personNewButton.setText(bundle.getString("New Person")); // NOI18N
        personNewButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                personNewButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(personSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(personNewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(personDetailsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(personIdTextField)
                                    .addComponent(personNameTextField)
                                    .addComponent(personBirth, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(personDeleteRelationshipButton))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(personRelationshipTabbedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(personDetailsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(personIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(personNameTextField)
                        .addGap(5, 5, 5))
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(personBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(personSaveButton)
                    .addComponent(personNewButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(personRelationshipTabbedPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(personDeleteRelationshipButton)
                .addContainerGap())
        );

        personRelationshipTabbedPanel.getAccessibleContext().setAccessibleName(bundle.getString("Played in")); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        personRelationshipComboBox.setModel(
            new javax.swing.DefaultComboBoxModel(
                new String[] {bundle.getString("Cast"), bundle.getString("Director"), bundle.getString("Writer")}
            )
        );

        personRelationshipAllMovieList.setModel(new javax.swing.AbstractListModel() {
            List<Movie> list = movieMngr.listAllMovies();
            public int getSize() { return list.size(); }
            public Object getElementAt(int i) { return list.get(i); }
        });
        jScrollPane5.setViewportView(personRelationshipAllMovieList);

        personRelationshipManagerLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        personRelationshipManagerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        personRelationshipManagerLabel.setText(bundle.getString("Relationship Manager")); // NOI18N

        personRelationshipAddButton.setText(bundle.getString("Add")); // NOI18N
        personRelationshipAddButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                personRelationshipAddButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(personRelationshipManagerLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(personRelationshipComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(personRelationshipAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(canvas1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(personRelationshipManagerLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(personRelationshipComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(personRelationshipAddButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        personRelationshipComboBox.getAccessibleContext().setAccessibleName(bundle.getString("Cast")); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText(bundle.getString("Your adverts can be here tomorrow!")); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText(bundle.getString("Only $8 a month!")); // NOI18N
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout headerPersonPanelLayout = new javax.swing.GroupLayout(headerPersonPanel);
        headerPersonPanel.setLayout(headerPersonPanelLayout);
        headerPersonPanelLayout.setHorizontalGroup(
            headerPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPersonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(headerPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(headerPersonPanelLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6))
                    .addGroup(headerPersonPanelLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(headerPersonPanelLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        headerPersonPanelLayout.setVerticalGroup(
            headerPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPersonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(headerPersonPanelLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        allPanel.addTab(bundle.getString("Person"), headerPersonPanel); // NOI18N

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        movieList.setModel(new javax.swing.AbstractListModel() {
            List<Movie> list = movieMngr.listAllMovies();
            public int getSize() { return list.size(); }
            public Object getElementAt(int i) { return list.get(i); }
        });
        movieList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                movieListValueChanged(evt);
            }
        });
        jScrollPane6.setViewportView(movieList);

        movieListLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        movieListLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        movieListLabel.setText(bundle.getString("Movie List")); // NOI18N

        movieDeleteButton.setText(bundle.getString("Delete Movie")); // NOI18N
        movieDeleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                movieDeleteButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(movieListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(movieDeleteButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(movieListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(movieDeleteButton)
                .addContainerGap())
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel11.setText(bundle.getString("Title")); // NOI18N

        jLabel12.setText(bundle.getString("Year")); // NOI18N

        jLabel13.setText("ID:");

        movieIdTextField.setEnabled(false);

        movieSaveButton.setText(bundle.getString("Save changes")); // NOI18N
        movieSaveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                movieSaveButtonMouseClicked(evt);
            }
        });

        movieNewButton.setText(bundle.getString("New Movie")); // NOI18N
        movieNewButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                movieNewButtonMouseClicked(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText(bundle.getString("Movie Details")); // NOI18N

        jLabel18.setText(bundle.getString("Genre")); // NOI18N

        jLabel19.setText(bundle.getString("Length")); // NOI18N

        jScrollPane11.setViewportView(movieActorsList);

        movieRelationshipTabbedPanel.addTab(bundle.getString("Actors"), jScrollPane11);

        jScrollPane12.setViewportView(movieDirectorsList);

        movieRelationshipTabbedPanel.addTab(bundle.getString("Directors"), jScrollPane12);

        jScrollPane13.setViewportView(movieWritersList);

        movieRelationshipTabbedPanel.addTab(bundle.getString("Writers"), jScrollPane13);

        movieDeleteRelationshipButton.setText(bundle.getString("Delete Relationship")); // NOI18N
        movieDeleteRelationshipButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                movieDeleteRelationshipButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(movieTitleTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(movieIdTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(movieYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 2, Short.MAX_VALUE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(movieGenreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(movieLengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(movieSaveButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(movieNewButton))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(movieRelationshipTabbedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(movieDeleteRelationshipButton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(movieIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(movieTitleTextField)
                        .addGap(5, 5, 5))
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(movieYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(movieGenreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(movieLengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(movieSaveButton)
                    .addComponent(movieNewButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(movieRelationshipTabbedPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(movieDeleteRelationshipButton)
                .addContainerGap())
        );

        movieRelationshipTabbedPanel.getAccessibleContext().setAccessibleName(bundle.getString("Actors")); // NOI18N

        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        movieRelationshipComboBox.setModel(
            new javax.swing.DefaultComboBoxModel(
                new String[] {bundle.getString("Cast"), bundle.getString("Director"), bundle.getString("Writer")}
            )
        );

        movieRelationshipAllPersonList.setModel(new javax.swing.AbstractListModel() {
            List<Person> list = personMngr.listAllPersons();
            public int getSize() { return list.size(); }
            public Object getElementAt(int i) { return list.get(i); }
        });
        jScrollPane10.setViewportView(movieRelationshipAllPersonList);

        movieRelationshipManagerLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        movieRelationshipManagerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        movieRelationshipManagerLabel.setText(bundle.getString("Relationship Manager")); // NOI18N

        movieRelationshipAddButton.setText(bundle.getString("Add")); // NOI18N
        movieRelationshipAddButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                movieRelationshipAddButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(canvas2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(movieRelationshipManagerLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(movieRelationshipComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(movieRelationshipAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(canvas2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(movieRelationshipManagerLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(movieRelationshipComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(movieRelationshipAddButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 0, 0));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText(bundle.getString("Your adverts can be here tomorrow!"));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText(bundle.getString("Utilize our special offer TODAY!")); // NOI18N

        javax.swing.GroupLayout headerMoviePanelLayout = new javax.swing.GroupLayout(headerMoviePanel);
        headerMoviePanel.setLayout(headerMoviePanelLayout);
        headerMoviePanelLayout.setHorizontalGroup(
            headerMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerMoviePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(headerMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(headerMoviePanelLayout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6))
                    .addGroup(headerMoviePanelLayout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(headerMoviePanelLayout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        headerMoviePanelLayout.setVerticalGroup(
            headerMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerMoviePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(headerMoviePanelLayout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        allPanel.addTab(bundle.getString("Movie"), headerMoviePanel); // NOI18N

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 128)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText(bundle.getString("Get a life!")); // NOI18N

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 893, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
                .addContainerGap())
        );

        allPanel.addTab(bundle.getString("Don't go here"), jPanel11); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(allPanel)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(allPanel))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void personListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_personListValueChanged
        int selectedIndex = personList.getSelectedIndex();
        if(selectedIndex !=  -1){
            Person person = (Person) personList.getModel().getElementAt(selectedIndex);
            personIdTextField.setText(person.getId().toString());
            personNameTextField.setText(person.getName());
            //personBirth.setDate(new Date(sdf.format(person.getBirth().getTime())));
            personBirth.setDate(person.getBirth().getTime());
            personDirectedListUpdateList(person);
            personWrittenListUpdateList(person);
            personPlayedInListUpdateList(person);
        }
    }//GEN-LAST:event_personListValueChanged

    private void personSaveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_personSaveButtonMouseClicked
        Calendar calendar = Calendar.getInstance();
        calendar.setTimeInMillis(personBirth.getDate().getTime());

            log.info("Date: " + sdf.format(calendar.getTime()));
            calendar.setTimeInMillis(personBirth.getDate().getTime());

        int selectedIndex = personList.getSelectedIndex();
        if(selectedIndex !=  -1){
            Person person = (Person) personList.getModel().getElementAt(selectedIndex);
            person.setName(personNameTextField.getText());
            person.setBirth(calendar);

            personMngr.updatePerson(person);
            personListUpdateList();
            personList.setSelectedIndex(selectedIndex);
        }
    }//GEN-LAST:event_personSaveButtonMouseClicked

    private void personDeleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_personDeleteButtonMouseClicked
        int selectedIndex = personList.getSelectedIndex();
        if(selectedIndex !=  -1){
            Person person = ((Person)personList.getModel().getElementAt(selectedIndex));

            personMngr.deletePerson(person.getId());
            personListUpdateList();
            personList.setSelectedIndex(0);
        }
    }//GEN-LAST:event_personDeleteButtonMouseClicked

    private void personNewButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_personNewButtonMouseClicked
        Calendar calendar = Calendar.getInstance();
        calendar.setTimeInMillis(personBirth.getDate().getTime());

            log.info("Date: " + sdf.format(calendar.getTime()));
            calendar.setTimeInMillis(personBirth.getDate().getTime());
            
        Person person = new Person();
        person.setName(personNameTextField.getText());
        person.setBirth(calendar);
        person.setId(null);

        personMngr.createPerson(person);
        personListUpdateList();
        personList.setSelectedIndex(personList.getModel().getSize()-1);
    }//GEN-LAST:event_personNewButtonMouseClicked

    private void personRelationshipAddButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_personRelationshipAddButtonMouseClicked
        int personSelectedIndex = personList.getSelectedIndex();
        if(personSelectedIndex !=  -1){
            Person person = (Person) personList.getModel().getElementAt(personSelectedIndex);
            int selectedIndex = personRelationshipAllMovieList.getSelectedIndex();
            if(selectedIndex !=  -1){
                Movie movie = (Movie) personRelationshipAllMovieList.getModel().getElementAt(selectedIndex);
                int roleSelectedIndex = personRelationshipComboBox.getSelectedIndex();
                if(roleSelectedIndex !=  -1){
                    if(personRelationshipComboBox.getSelectedIndex()==0){
                        relationshipMngr.addPersonToRole(person, movie, Consts.CAST);
                        personPlayedInListUpdateList(person);
                    } else if(personRelationshipComboBox.getSelectedIndex()==1){
                        relationshipMngr.addPersonToRole(person, movie, Consts.DIRECTOR);
                        personDirectedListUpdateList(person);
                    } else if(personRelationshipComboBox.getSelectedIndex()==2){
                        relationshipMngr.addPersonToRole(person, movie, Consts.WRITER);
                        personWrittenListUpdateList(person);
                    }
                }
            }
        }
    }//GEN-LAST:event_personRelationshipAddButtonMouseClicked



    private void personListUpdateList(){
        personList.setModel(new javax.swing.AbstractListModel() {
            List<Person> list = personMngr.listAllPersons();
            public int getSize() {
                return list.size();
            }
            public Object getElementAt(int i) {
                return list.get(i);
            }
        });
    }

    private void personPlayedInListUpdateList(Person person){
        personPlayedInList.setModel(new javax.swing.AbstractListModel() {
            List<Movie> list = relationshipMngr.moviesOfPerson(person, Consts.CAST);
            public int getSize() {
                return list.size();
            }
            public Object getElementAt(int i) {
                return list.get(i);
            }
        });
    }

    private void personDirectedListUpdateList(Person person){
        personDirectedList.setModel(new javax.swing.AbstractListModel() {
            List<Movie> list = relationshipMngr.moviesOfPerson(person, Consts.DIRECTOR);
            public int getSize() {
                return list.size();
            }
            public Object getElementAt(int i) {
                return list.get(i);
            }
        });
    }

    private void personWrittenListUpdateList(Person person){
        personWrittenList.setModel(new javax.swing.AbstractListModel() {
            List<Movie> list = relationshipMngr.moviesOfPerson(person, Consts.WRITER);
            public int getSize() {
                return list.size();
            }
            public Object getElementAt(int i) {
                return list.get(i);
            }
        });
    }


    private void movieDeleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_movieDeleteButtonMouseClicked
        int selectedIndex = movieList.getSelectedIndex();
        if(selectedIndex !=  -1){
            Movie movie = ((Movie)movieList.getModel().getElementAt(selectedIndex));

            movieMngr.deleteMovie(movie.getId());
            movieListUpdateList();
            movieList.setSelectedIndex(0);
        }
    }//GEN-LAST:event_movieDeleteButtonMouseClicked

    private void movieListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_movieListValueChanged
        int selectedIndex = movieList.getSelectedIndex();
        if(selectedIndex !=  -1){
            Movie movie = (Movie) movieList.getModel().getElementAt(selectedIndex);
            movieIdTextField.setText(movie.getId().toString());
            movieTitleTextField.setText(movie.getTitle());
            movieYearTextField.setText(((Integer)movie.getYear()).toString());
            movieGenreTextField.setText(movie.getGenre());
            movieLengthTextField.setText(((Integer)movie.getLength()).toString());
            movieDirectorsListUpdateList(movie);
            movieWritersListUpdateList(movie);
            movieActorsListUpdateList(movie);
        }
    }//GEN-LAST:event_movieListValueChanged

    private void movieSaveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_movieSaveButtonMouseClicked
        int selectedIndex = movieList.getSelectedIndex();
        if(selectedIndex !=  -1){
            Movie movie = (Movie) movieList.getModel().getElementAt(selectedIndex);
            movie.setTitle(movieTitleTextField.getText());
            movie.setYear(Integer.parseInt(movieYearTextField.getText()));
            movie.setGenre(movieGenreTextField.getText());
            movie.setLength(Integer.parseInt(movieLengthTextField.getText()));

            movieMngr.updateMovie(movie);
            movieListUpdateList();
            movieList.setSelectedIndex(selectedIndex);
        }
    }//GEN-LAST:event_movieSaveButtonMouseClicked

    private void movieNewButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_movieNewButtonMouseClicked
            Movie movie = new Movie();
            movie.setTitle(movieTitleTextField.getText());
            movie.setYear(Integer.parseInt(movieYearTextField.getText()));
            movie.setGenre(movieGenreTextField.getText());
            movie.setLength(Integer.parseInt(movieLengthTextField.getText()));
            movie.setId(null);

            movieMngr.createMovie(movie);
            movieListUpdateList();
            movieList.setSelectedIndex(movieList.getModel().getSize()-1);
    }//GEN-LAST:event_movieNewButtonMouseClicked

    private void movieDeleteRelationshipButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_movieDeleteRelationshipButtonMouseClicked
        int movieSelectedIndex = movieList.getSelectedIndex();
        if(movieSelectedIndex !=  -1){
            Movie movie = (Movie) movieList.getModel().getElementAt(movieSelectedIndex);
            int selectedIndex;

            int listIndex = movieRelationshipTabbedPanel.getSelectedIndex();
            if(listIndex == 0){
                selectedIndex = movieActorsList.getSelectedIndex();
                if(selectedIndex !=  -1){
                    Person person = (Person) movieActorsList.getModel().getElementAt(selectedIndex);
                    relationshipMngr.removeRelationship(person, movie);
                    movieActorsListUpdateList(movie);
                }
            } else if(listIndex == 1){
                selectedIndex = movieWritersList.getSelectedIndex();
                if(selectedIndex !=  -1){
                    Person person = (Person) movieWritersList.getModel().getElementAt(selectedIndex);
                    relationshipMngr.removeRelationship(person, movie);
                    movieWritersListUpdateList(movie);
                }
            } else if(listIndex == 2){
                selectedIndex = movieDirectorsList.getSelectedIndex();
                if(selectedIndex !=  -1){
                    Person person = (Person) movieDirectorsList.getModel().getElementAt(selectedIndex);
                    relationshipMngr.removeRelationship(person, movie);
                    movieDirectorsListUpdateList(movie);
                }
            }
        }
    }//GEN-LAST:event_movieDeleteRelationshipButtonMouseClicked

    private void movieRelationshipAddButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_movieRelationshipAddButtonMouseClicked
        int movieSelectedIndex = movieList.getSelectedIndex();
        if(movieSelectedIndex !=  -1){
            Movie movie = (Movie) movieList.getModel().getElementAt(movieSelectedIndex);
            int selectedIndex = movieRelationshipAllPersonList.getSelectedIndex();
            if(selectedIndex !=  -1){
                Person person = (Person) movieRelationshipAllPersonList.getModel().getElementAt(selectedIndex);
                int roleSelectedIndex = movieRelationshipComboBox.getSelectedIndex();
                if(roleSelectedIndex !=  -1){
                    if(movieRelationshipComboBox.getSelectedIndex()==0){
                        relationshipMngr.addPersonToRole(person, movie, Consts.CAST);
                        movieActorsListUpdateList(movie);
                    } else if(movieRelationshipComboBox.getSelectedIndex()==1){
                        relationshipMngr.addPersonToRole(person, movie, Consts.DIRECTOR);
                        movieDirectorsListUpdateList(movie);
                    } else if(movieRelationshipComboBox.getSelectedIndex()==2){
                        relationshipMngr.addPersonToRole(person, movie, Consts.WRITER);
                        movieWritersListUpdateList(movie);
                    }
                }
            }
        }
    }//GEN-LAST:event_movieRelationshipAddButtonMouseClicked

    private void personDeleteRelationshipButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_personDeleteRelationshipButtonMouseClicked
        int personSelectedIndex = personList.getSelectedIndex();
        if(personSelectedIndex !=  -1){
            Person person = (Person) personList.getModel().getElementAt(personSelectedIndex);
            int selectedIndex;

            int listIndex = personRelationshipTabbedPanel.getSelectedIndex();
            if(listIndex == 0){
                selectedIndex = personPlayedInList.getSelectedIndex();
                if(selectedIndex !=  -1){
                    Movie movie = (Movie) personPlayedInList.getModel().getElementAt(selectedIndex);
                    relationshipMngr.removeRelationship(person, movie);
                    personPlayedInListUpdateList(person);
                }
            } else if(listIndex == 1){
                selectedIndex = personWrittenList.getSelectedIndex();
                if(selectedIndex !=  -1){
                    Movie movie = (Movie) personWrittenList.getModel().getElementAt(selectedIndex);
                    relationshipMngr.removeRelationship(person, movie);
                    personWrittenListUpdateList(person);
                }
            } else if(listIndex == 2){
                selectedIndex = personDirectedList.getSelectedIndex();
                if(selectedIndex !=  -1){
                    Movie movie = (Movie) personDirectedList.getModel().getElementAt(selectedIndex);
                    relationshipMngr.removeRelationship(person, movie);
                    personDirectedListUpdateList(person);
                }
            }
        }
    }//GEN-LAST:event_personDeleteRelationshipButtonMouseClicked

    private void movieListUpdateList(){
        movieList.setModel(new javax.swing.AbstractListModel() {
            List<Movie> list = movieMngr.listAllMovies();
            public int getSize() {
                return list.size();
            }
            public Object getElementAt(int i) {
                return list.get(i);
            }
        });
    }

    private void movieDirectorsListUpdateList(Movie movie){
        movieDirectorsList.setModel(new javax.swing.AbstractListModel() {
            List<Person> list = relationshipMngr.personsOfMovie(movie, Consts.DIRECTOR);
            public int getSize() {
                return list.size();
            }
            public Object getElementAt(int i) {
                return list.get(i);
            }
        });
    }

    private void movieActorsListUpdateList(Movie movie){
        movieActorsList.setModel(new javax.swing.AbstractListModel() {
            List<Person> list = relationshipMngr.personsOfMovie(movie, Consts.CAST);
            public int getSize() {
                return list.size();
            }
            public Object getElementAt(int i) {
                return list.get(i);
            }
        });
    }

    private void movieWritersListUpdateList(Movie movie){
        movieWritersList.setModel(new javax.swing.AbstractListModel() {
            List<Person> list = relationshipMngr.personsOfMovie(movie, Consts.WRITER);
            public int getSize() {
                return list.size();
            }
            public Object getElementAt(int i) {
                return list.get(i);
            }
        });
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane allPanel;
    private java.awt.Canvas canvas1;
    private java.awt.Canvas canvas2;
    private javax.swing.JPanel headerMoviePanel;
    private javax.swing.JPanel headerPersonPanel;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private org.jdatepicker.util.JDatePickerUtil jDatePickerUtil1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JList movieActorsList;
    private javax.swing.JButton movieDeleteButton;
    private javax.swing.JButton movieDeleteRelationshipButton;
    private javax.swing.JList movieDirectorsList;
    private javax.swing.JTextField movieGenreTextField;
    private javax.swing.JTextField movieIdTextField;
    private javax.swing.JTextField movieLengthTextField;
    private javax.swing.JList movieList;
    private javax.swing.JLabel movieListLabel;
    private javax.swing.JButton movieNewButton;
    private javax.swing.JButton movieRelationshipAddButton;
    private javax.swing.JList movieRelationshipAllPersonList;
    private javax.swing.JComboBox movieRelationshipComboBox;
    private javax.swing.JLabel movieRelationshipManagerLabel;
    private javax.swing.JTabbedPane movieRelationshipTabbedPanel;
    private javax.swing.JButton movieSaveButton;
    private javax.swing.JTextField movieTitleTextField;
    private javax.swing.JList movieWritersList;
    private javax.swing.JTextField movieYearTextField;
    private org.jdesktop.swingx.JXDatePicker personBirth;
    private javax.swing.JButton personDeleteButton;
    private javax.swing.JButton personDeleteRelationshipButton;
    private javax.swing.JLabel personDetailsLabel;
    private javax.swing.JList personDirectedList;
    private javax.swing.JTextField personIdTextField;
    private javax.swing.JList personList;
    private javax.swing.JLabel personListLabel;
    private javax.swing.JTextField personNameTextField;
    private javax.swing.JButton personNewButton;
    private javax.swing.JList personPlayedInList;
    private javax.swing.JButton personRelationshipAddButton;
    private javax.swing.JList personRelationshipAllMovieList;
    private javax.swing.JComboBox personRelationshipComboBox;
    private javax.swing.JLabel personRelationshipManagerLabel;
    private javax.swing.JTabbedPane personRelationshipTabbedPanel;
    private javax.swing.JButton personSaveButton;
    private javax.swing.JList personWrittenList;
    private org.jdatepicker.impl.UtilDateModel utilDateModel1;
    // End of variables declaration//GEN-END:variables
}
